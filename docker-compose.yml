version: '3'
services:
  
  composer:
    image: composer:2.4.3
    container_name: composer
    restart: no
    tty: true
    volumes:
      - type: bind
        source: ./
        target: /app
    entrypoint: composer install --ignore-platform-req=ext-pcntl
    working_dir: /app

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: myphp
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    entrypoint: 
      - /bin/sh
      - -c
      - |
        npm install 
        npm run build
        php artisan key:generate
        php artisan config:cache
        php artisan storage:link
        php artisan migrate --force
        php artisan horizon:install
        php artisan horizon:publish
        docker-php-entrypoint php-fpm
    networks:
      - app-network
    depends_on:
      - composer
      - db

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    command: "redis-server --appendonly yes"
    networks:
      - app-network

  mailpit:
    image: axllent/mailpit:v1.7
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql 
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local